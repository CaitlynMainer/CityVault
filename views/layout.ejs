<% const messages = typeof getMessages === 'function' ? getMessages() : { success: [], error: [] }; %>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script>
    (function () {
      const theme = localStorage.getItem('theme');
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      if (theme === 'dark' || (!theme && prefersDark)) {
        document.documentElement.classList.add('dark');
      }
    })();
  </script>
  <title><%= typeof title !== 'undefined' ? title : config.siteName %></title>
  <link href="/css/output.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/default.css">
  <link rel="stylesheet" href="/css/custom.css">
  <link rel="stylesheet" href="/css/fonts.css">

  <!-- Full favicon support -->
  <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <link rel="manifest" href="/site.webmanifest" />

  <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
<% if (config.useAutoEncrypt) { %>
  <script>
    (function () {
      if (location.protocol === 'http:') {
        location.href = 'https://' + location.host + location.pathname + location.search + location.hash;
      }
    })();
  </script>
<% } %>


</head>
<body class="flex flex-col md:flex-row min-h-screen">
<div class="w-full md:w-64 bg-gray-800">
  <%- include('partials/sidebar') %>
</div>

  <div class="flex-1 flex flex-col">
    <%- include('partials/header') %>
    <main class="flex-1 p-4 md:p-6 overflow-y-auto">
      <% if (messages.error.length || messages.success.length) { %>
        <div class="flash-container">
          <% messages.error.forEach(msg => { %>
            <p class="text-red-500"><%= msg %></p>
          <% }) %>
          <% messages.success.forEach(msg => { %>
            <p class="text-green-500"><%= msg %></p>
          <% }) %>
        </div>
      <% } %>
      <%- body %>
    </main>
    <%- include('partials/footer') %>
  </div>

<script>
  const root = document.documentElement;
  const toggle = document.getElementById('themeToggle');
  const icon = document.getElementById('themeIcon');

  function updateThemeIcon(isDark) {
    icon.textContent = isDark ? 'ðŸŒ™' : 'ðŸŒž';
  }

  // Load saved mode or match system
  const savedTheme = localStorage.getItem('theme');
  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
  const isInitiallyDark = savedTheme === 'dark' || (!savedTheme && prefersDark);

  if (isInitiallyDark) {
    root.classList.add('dark', 'bg-gray-900', 'text-white');
    root.classList.remove('bg-white', 'text-black');
    updateThemeIcon(true);
  } else {
    root.classList.remove('dark', 'bg-gray-900', 'text-white');
    root.classList.add('bg-white', 'text-black');
    updateThemeIcon(false);
  }

  toggle.addEventListener('click', () => {
    const isDark = root.classList.contains('dark');
    if (isDark) {
      root.classList.remove('dark', 'bg-gray-900', 'text-white');
      root.classList.add('bg-white', 'text-black');
      localStorage.setItem('theme', 'light');
    } else {
      root.classList.add('dark', 'bg-gray-900', 'text-white');
      root.classList.remove('bg-white', 'text-black');
      localStorage.setItem('theme', 'dark');
    }

    updateThemeIcon(!isDark);
  });
</script>

</body>
</html>