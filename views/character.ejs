<% const isForced = typeof forcedAccess !== 'undefined' && forcedAccess; %>
<% const isAllowed = typeof character !== 'undefined' && character !== null; %>
<% if (isAllowed || isForced) { %>
  <% if (message) { %>
    <div class="alert" style="background: #333; color: #ffc; padding: 10px; margin-bottom: 20px;"><%= message %></div>
  <% } %>
  <% if (isForced) { %>
    <div class="alert">This character is part of a private profile. Displaying because you are an admin.</div>
  <% } %>
  <div class="character-profile-container" style="display: flex; gap: 24px; align-items: flex-start;">
    <!-- Left Column: Character Summary -->
    <div class="left-panel" style="flex: 0 0 360px;">
      <div style="display: flex; justify-content: center;">
        <img src="/images/portrait/<%= serverKey %>_<%= character.ContainerId %>.jpg"
            alt="Character Portrait"
            style="max-width: 200px; max-height: 400px; width: auto; height: auto; border-radius: 8px; margin-bottom: 8px;" />
      </div>

      <% if (viewerIsOwner) { %>
        <form action="/character/uploadPortrait" method="post" enctype="multipart/form-data">
          <input type="hidden" name="characterId" value="<%= serverKey %>:<%= character.ContainerId %>">
          <input type="file" name="portrait" accept="image/*" required>
          <button type="submit" class="btn btn-blue mt-2">Upload Portrait</button>
        </form>
      <% } %>

      <div style="display: flex; justify-content: center; gap: 8px; margin-bottom: 12px;">
        <img src="/images/icons/<%= character.alignment.toLowerCase() %>.png" alt="Alignment" title="<%= character.alignment %>" height="32" />
        <img src="/images/icons/<%= character.OriginName.toLowerCase() %>.png" alt="Origin" title="<%= character.OriginName %>" height="32" />
        <img src="/images/icons/<%= character.ClassName.toLowerCase() %>.png" alt="Archetype" title="<%= character.ClassName %>" height="32" />
      </div>

      <ul style="font-size: 14px; color: #ccc; line-height: 1.6;">
        <li><strong>Title:</strong> <%= character.DisplayTitle || '(None)' %></li>
        <li><strong>Supergroup:</strong>
          <% if (character.SupergroupLink) { %>
            <a href="/supergroup/<%= serverKey %>:<%= character.SupergroupLink.id %>"><%= stringClean(character.SupergroupLink.name) %></a>
          <% } else { %>
            (None)
          <% } %>
        </li>
        <li><strong>Archetype:</strong> <%= character.ClassName %></li>
        <li><strong>Primary:</strong> <%= character.PrimaryPowerset %></li>
        <li><strong>Secondary:</strong> <%= character.SecondaryPowerset %></li>
        <li><strong>Pools:</strong> <%= character.Pools.join(', ') %></li>
        <li><strong>Ancillary Pools:</strong> <%= character.AncillaryPools.join(', ') %></li>
        <li><strong>XP Level:</strong> <%= character.Level %></li>
        <li><strong>Experience:</strong> <%= character.Experience %></li>
        <li><strong>Influence:</strong> <%= character.Influence %></li>
        <li><strong>Last Seen:</strong> <%= character.LastSeen %></li>
        <li><strong>Created:</strong> <%= character.Created %></li>
        <li><strong>Login Count:</strong> <%= character.LoginCount %></li>
        <li><strong>Total Time Played:</strong> <%= character.TotalTimePlayed %></li>
        <li><strong>Global:</strong>
          <% if (character.globalHandle) { %>
            <a href="/profile/<%= character.AuthId %>">@<%= stringClean(character.globalHandle) %></a>
          <% } else { %>
            (Unknown)
          <% } %>
        </li>
      </ul>
    </div>

    <!-- Right Column: Character Name, Bio, and Badges -->
    <div class="right-panel" style="flex: 1; max-width: 720px;">
      <h1 style="margin-top: 0;"><%= stringClean(character.Name) %></h1>
      <p><strong>Player:</strong> @<%= stringClean(character.globalHandle) %></p>

      <div style="margin: 12px 0;">
        <strong>Description:</strong><br />
        <p style="white-space: pre-wrap;"><%- stringClean(character.Description) %></p>
      </div>

      <h2>Badge Tracking</h2>
      <div style="margin: 24px 0;">
        <div style="background: #ccc; border-radius: 4px; height: 12px; overflow: hidden;">
          <div style="background: linear-gradient(to right, orange, gold); width: <%= Math.floor((ownedBadges / totalBadges) * 100) %>%; height: 100%;"></div>
        </div>
        <div style="margin-top: 4px; text-align: center; font-size: 14px; color: #ddd;">
          <strong><%= character.Name %></strong> has collected <strong><%= ownedBadges %></strong> of <strong><%= totalBadges %></strong> badges.
        </div>
      </div>

      <% badgeCategoryList.forEach(category => { %>
        <h3><%= category.name %></h3>
        <div style="margin-bottom: 8px;">
          <div style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 4px;">
            <div style="flex: 1; background: #ccc; height: 16px; border-radius: 4px; margin-right: 8px;">
              <div style="background: linear-gradient(to right, orange, gold); width: <%= Math.floor((category.owned / category.total) * 100) %>%; height: 100%; border-radius: 4px;"></div>
            </div>
            <div style="white-space: nowrap; font-size: 14px; color: #eee;">
              <%= category.owned %> of <%= category.total %> badges earned
            </div>
          </div>
          <a href="#" onclick="toggleBadges('<%= category.name %>'); return false;">Toggle Details</a>
        </div>
        <ul id="details-<%= category.name %>" class="badge-list" style="display: none;" data-badges="<%= encodeURIComponent(JSON.stringify(category.badges)) %>">
          <li class="loading-spinner">Loading...</li>
        </ul>
      <% }) %>

      <h2>Unearned but Eligible Badges</h2>
      <% unearnedBadgeCategories.forEach(category => { %>
        <h3><%= category.name %></h3>
        <div style="margin-bottom: 8px;">
          <div style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 4px;">
            <div style="flex: 1; background: #ccc; height: 16px; border-radius: 4px; margin-right: 8px;">
              <div style="background: linear-gradient(to right, #666, #999); width: 0%; height: 100%; border-radius: 4px;"></div>
            </div>
            <div style="white-space: nowrap; font-size: 14px; color: #eee;">
              0 of <%= category.count %> badges earned
            </div>
          </div>
          <a href="#" onclick="toggleBadges('unearned-<%= category.name %>'); return false;">Toggle Details</a>
        </div>
        <ul id="details-unearned-<%= category.name %>" class="badge-list" style="display: none;" data-badges="<%= encodeURIComponent(JSON.stringify(category.badges)) %>">
          <li class="loading-spinner">Loading...</li>
        </ul>
      <% }) %>
    </div>
  </div>
<% } else { %>
  <div class="alert"><%= message %></div>
<% } %>
    <script>
      function toggleBadges(cat) {
        const el = document.getElementById('details-' + cat);
        if (!el) return;

        if (el.style.display === 'none') {
          el.style.display = 'block';

          if (!el.dataset.loaded) {
            try {
              const decoded = decodeURIComponent(el.dataset.badges);
              const badges = JSON.parse(decoded);

              const spinner = el.querySelector('.loading-spinner');
              if (spinner) spinner.remove();
                for (const b of badges) {
                  const li = document.createElement('li');
                  li.style.display = 'grid';
                  li.style.gridTemplateColumns = '1.5em 80px 1fr';
                  li.style.alignItems = 'center';
                  li.style.columnGap = '8px';
                  li.style.marginBottom = '6px';

                  const status = document.createElement('span');
                  status.textContent = b.owned ? '✅' : '❌';

                  const iconWrapper = document.createElement('div');
                  iconWrapper.style.width = '80px';
                  iconWrapper.style.display = 'flex';
                  iconWrapper.style.alignItems = 'center';

                  const icon = document.createElement('img');
                  icon.src = `/images/badges/${b.image}.png`;
                  icon.alt = b.DisplayTitle;
                  icon.style.height = '32px';
                  icon.style.maxWidth = '100%';
                  iconWrapper.appendChild(icon);

                  const label = document.createElement('span');
                  label.textContent = b.DisplayTitle;

                  li.appendChild(status);
                  li.appendChild(iconWrapper);
                  li.appendChild(label);

                  el.appendChild(li);
                }
              el.dataset.loaded = 'true';
            } catch (e) {
              console.error('Failed to parse badges:', e);
            }
          }
        } else {
          el.style.display = 'none';
        }
      }
    </script>