name: Release CityVault

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: true

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Get previous tag (if any)
        id: prev
        run: |
          PREV=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "previous_tag=$PREV" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          if [ -z "${{ steps.prev.outputs.previous_tag }}" ]; then
            RANGE=""
          else
            RANGE="${{ steps.prev.outputs.previous_tag }}..${{ github.ref_name }}"
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          git log $RANGE --pretty=format:"- %s" | grep -vEi 'update.*version\\.json|bump.*version\\.json|version\\.json' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Write version.json for ZIP
        run: |
          echo '{ "version": "${{ env.VERSION }}" }' > version.json

      - name: Create ZIP artifact
        run: |
          mkdir dist
          zip -r "dist/cityvault-${{ env.VERSION }}.zip" . -x "*.git*" "node_modules/*"

      - name: Debug ZIP output
        run: ls -lh dist/

      - name: Upload Release ZIP
        uses: softprops/action-gh-release@v1
        with:
          files: dist/cityvault-${{ env.VERSION }}.zip
          name: CityVault v${{ env.VERSION }}
          body: ${{ steps.changelog.outputs.changelog }}
          tag_name: v${{ env.VERSION }}

      - name: Remove version.json before switching branches
        run: rm -f version.json

      - name: Update update.json in gh-pages
        run: |
          git fetch origin gh-pages
          git checkout gh-pages
          echo '{
            "latest": "${{ env.VERSION }}",
            "url": "https://github.com/${{ github.repository }}/releases/download/v${{ env.VERSION }}/cityvault-${{ env.VERSION }}.zip",
            "notes": "See https://github.com/${{ github.repository }}/releases/tag/v${{ env.VERSION }}"
          }' > update.json
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add update.json
          git commit -m "Update update.json for v${{ env.VERSION }}" || echo "No changes"
          git push origin gh-pages
