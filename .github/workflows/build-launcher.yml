name: Build Electron Launcher

on:
  push:
    branches:
      - dev
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        arch: [x64]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: launcher

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Determine platform
        id: platform
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "platform=win32" >> "$GITHUB_OUTPUT"
          else
            echo "platform=linux" >> "$GITHUB_OUTPUT"
          fi
        shell: bash

      - name: Determine version string
        id: version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "value=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_OUTPUT"
          else
            echo "value=dev-${{ github.run_number }}" >> "$GITHUB_OUTPUT"
          fi
        shell: bash

      - name: Package launcher
        run: |
          npx --yes @electron/packager . cityvault-launcher \
            --platform=${{ steps.platform.outputs.platform }} \
            --arch=${{ matrix.arch }} \
            --icon=icon.ico \
            --overwrite \
            --asar.unpack=config.json \
            --ignore="^/tests" \
            --ignore="^/docs" \
            --ignore=".*\\.map" \
            --ignore=".*\\.md" \
            --ignore="^/node_modules/(electron|.*-dev).*" \
            --ignore="^/config"
        shell: bash

      - name: Archive build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $zipName = "cityvault-launcher-win-${{ steps.version.outputs.value }}.zip"
          Compress-Archive -Path cityvault-launcher-win32-${{ matrix.arch }}\* -DestinationPath $zipName
        shell: pwsh

      - name: Archive build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          TAR_NAME="cityvault-launcher-linux-${{ steps.version.outputs.value }}.tar.gz"
          tar -czf "$TAR_NAME" cityvault-launcher-linux-${{ matrix.arch }}

      - name: Upload zipped build to GitHub Release (only for tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            launcher/cityvault-launcher-win-*.zip
            launcher/cityvault-launcher-linux-*.tar.gz
            launcher/cityvault-launcher-*/resources/app.asar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare launcher version JSON
        run: |
          mkdir -p launcher_version_tmp
          echo "{ \"version\": \"${{ steps.version.outputs.value }}\" }" > launcher_version_tmp/${{ github.ref_type == 'tag' && 'launcher-version.json' || 'dev-launcher-version.json' }}
        shell: bash

      - name: Commit version JSON to gh-pages
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git fetch origin gh-pages
          git switch gh-pages
          cp -r ../launcher_version_tmp/* .
          git add *.json
          git commit -m "Update launcher version JSON from $GITHUB_REF" || echo "No changes"
          git push origin gh-pages
