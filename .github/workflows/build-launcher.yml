name: Build Electron Launcher

on:
  push:
    branches:
      - dev
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        arch: [x64]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: launcher

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Package launcher (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          npx electron-packager . cityvault-launcher \
            --platform=linux \
            --arch=${{ matrix.arch }} \
            --icon=icon.ico \
            --overwrite \
            --asar.unpack=config.json \
            --ignore="^/tests" \
            --ignore="^/docs" \
            --ignore=".*\\.map" \
            --ignore=".*\\.md" \
            --ignore="^/node_modules/(electron|.*-dev).*" \
            --ignore="^/config"
        shell: bash

      - name: Package launcher (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          npx electron-packager . cityvault-launcher `
            --platform=win32 `
            --arch=${{ matrix.arch }} `
            --icon=icon.ico `
            --overwrite `
            --asar.unpack=config.json `
            --ignore='^/tests' `
            --ignore='^/docs' `
            --ignore='.*\\.map' `
            --ignore='.*\\.md' `
            --ignore='^/node_modules/(electron|.*-dev).*' `
            --ignore='^/config'

      - name: Archive build (Windows)
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -Path cityvault-launcher-win32-${{ matrix.arch }}\* -DestinationPath cityvault-launcher-win.zip
        shell: pwsh

      - name: Archive build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: tar -czf cityvault-launcher-linux.tar.gz cityvault-launcher-linux-${{ matrix.arch }}
        shell: bash

      - name: Upload zipped build to GitHub Release (only for tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            launcher/cityvault-launcher-win.zip
            launcher/cityvault-launcher-linux.tar.gz
            launcher/cityvault-launcher-*/resources/app.asar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare launcher version JSON
        run: |
          mkdir -p launcher_version_tmp
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
            echo "{ \"version\": \"$VERSION\" }" > launcher_version_tmp/launcher-version.json
          else
            echo "{ \"version\": \"dev-${GITHUB_RUN_NUMBER}\" }" > launcher_version_tmp/dev-launcher-version.json
          fi
        shell: bash

      - name: Deploy launcher version JSON to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./launcher_version_tmp
          destination_dir: launcher
          keep_files: true
          publish_branch: gh-pages
          commit_message: Update launcher version JSON from ${{ github.ref }}
